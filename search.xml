<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>博客折腾笔记</title>
    <url>/2020/06/20/%E5%8D%9A%E5%AE%A2%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>之前有拿Wordpress搭建过博客，感觉还是太臃肿了，Hexo这种静态博客刚好满足我的需求，记录下折腾博客的过程。</p>
<a id="more"></a>

<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>在云服务商处购买服务器与域名，备案的时候需要服务器，如果打算将博客托管在对象存储或者github pages之类的平台，可以选择不购买服务器，直接到*宝购买服务号即可。</p>
<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><h3 id="Hexo-的安装"><a href="#Hexo-的安装" class="headerlink" title="Hexo 的安装"></a>Hexo 的安装</h3><ul>
<li>安装<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">node.js</a></li>
</ul>
<blockquote>
<p>使用 Node.js 官方安装程序时，请确保勾选 <strong>Add to PATH</strong> 选项（默认已勾选）</p>
</blockquote>
<ul>
<li>安装hexo</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果你觉得速度慢，可以使用阿里提供的<a href="https://developer.aliyun.com/mirror/NPM?from=tnpm" target="_blank" rel="noopener">NPM淘宝镜像</a>，或者<a href="https://stackoverflow.com/questions/7559648/is-there-a-way-to-make-npm-install-the-command-to-work-behind-proxy" target="_blank" rel="noopener">使用代理</a></p>
</blockquote>
<ul>
<li><p>修改配置</p>
<p>打开<code>_config.yml</code>，修改<code>title</code>、<code>description</code>、<code>author</code>、<code>language</code>、<code>url</code>字段。</p>
</li>
</ul>
<h3 id="安装-next-主题"><a href="#安装-next-主题" class="headerlink" title="安装 next 主题"></a>安装 next 主题</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span>  blog</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>在<code>_config.yml</code>中将<code>theme</code>字段值设置为<code>next</code>。</p>
<h3 id="配置-next-主题（可选）"><a href="#配置-next-主题（可选）" class="headerlink" title="配置 next 主题（可选）"></a>配置 next 主题（可选）</h3><p>配置next主题指的是修改<code>next/_config.yml</code>文件，注意区分。</p>
<h4 id="选择-Scheme"><a href="#选择-Scheme" class="headerlink" title="选择 Scheme"></a>选择 Scheme</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br></pre></td></tr></table></figure>

<h4 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">http://image.onebug.tech/avatar.png</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="添加标签页"><a href="#添加标签页" class="headerlink" title="添加标签页"></a>添加标签页</h4><ul>
<li><p>新建标签页</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your-hexo-site </span><br><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改主题配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="添加分类页"><a href="#添加分类页" class="headerlink" title="添加分类页"></a>添加分类页</h4><ul>
<li><p>新建标签页</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your-hexo-site </span><br><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改主题配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br></pre></td></tr></table></figure>


</li>
</ul>
<h4 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/lsqls</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="string">邮箱:</span> <span class="string">mailto:764666894@qq.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br></pre></td></tr></table></figure>
<h4 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 外链字体库地址，例如 //fonts.googleapis.com (默认值)</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 全局字体，应用在 body 元素上</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Monda</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 标题字体 (h1, h2, h3, h4, h5, h6)</span></span><br><span class="line">  <span class="attr">headings:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Roboto</span> <span class="string">Slab</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 文章字体</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Logo 字体</span></span><br><span class="line">  <span class="attr">logo:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Lobster</span> <span class="string">Two</span></span><br><span class="line">    <span class="attr">size:</span> <span class="number">24</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 代码字体，应用于 code 以及代码块</span></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">PT</span> <span class="string">Mono</span></span><br></pre></td></tr></table></figure>

<h4 id="设置动画效果"><a href="#设置动画效果" class="headerlink" title="设置动画效果"></a>设置动画效果</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">use_motion:</span> <span class="literal">true</span>  <span class="comment"># 开启动画效果</span></span><br><span class="line"><span class="comment"># use_motion: false # 关闭动画效果</span></span><br></pre></td></tr></table></figure>

<h4 id="设置页脚"><a href="#设置页脚" class="headerlink" title="设置页脚"></a>设置页脚</h4><ul>
<li><p>不显示<code>Powered by Hexo &amp; NexT</code>信息</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">powered:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>添加备案号</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">beian:</span></span><br><span class="line"> <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"> <span class="attr">icp:</span> <span class="string">京ICP备17073808-2</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>站点建立时间</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">since:</span> <span class="number">2020</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="设置版权信息"><a href="#设置版权信息" class="headerlink" title="设置版权信息"></a>设置版权信息</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Declare license on posts</span></span><br><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line"> <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"> <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">3.0</span></span><br><span class="line"> <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/3.0/</span></span><br></pre></td></tr></table></figure>

<h4 id="加载进度条"><a href="#加载进度条" class="headerlink" title="加载进度条"></a>加载进度条</h4><ul>
<li><p>安装<code>pace</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-pace themes/next/<span class="built_in">source</span>/lib/pace</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Themes list:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">minimal</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="显示当前浏览进度"><a href="#显示当前浏览进度" class="headerlink" title="显示当前浏览进度"></a>显示当前浏览进度</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line"> <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h4><p>登录 <a href="http://tongji.baidu.com/" target="_blank" rel="noopener">百度统计</a>，定位到站点的代码获取页面，复制 <code>hm.js?</code> 后面那串统计脚本 id，编辑 主题配置文件， 修改字段 <code>baidu_analytics</code>，值设置成你的百度统计脚本 id</p>
<h4 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h4><p>比较常用的开源项目 CDN 服务商主要有 unpkg、bootcdn、 cdnjs、jsdelivr 和 cloudflare，本站主要使用 jsdelivr 提供的 CDN 加速服务。</p>
<h2 id="博客部署"><a href="#博客部署" class="headerlink" title="博客部署"></a>博客部署</h2><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><ul>
<li>git</li>
<li>nginx</li>
</ul>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="git服务器"><a href="#git服务器" class="headerlink" title="git服务器"></a>git服务器</h4><ul>
<li><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600/899998870925664" target="_blank" rel="noopener">搭建git服务器</a></p>
</li>
<li><p>配置钩子</p>
<p>在 <code>/home/git/lsqls/public.git</code>  目录下新建一个 <code>post-receive</code> 文件，编辑这个文件，写入如下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">git --work-tree=/var/www/hexoblog/public --git-dir=/home/git/lsqls/public.git checkout -f</span><br></pre></td></tr></table></figure>

<ul>
<li>设置这个文件的可执行权限：<code>chmod +x post-receive</code></li>
<li>更改配置目录的权限：<code>chown -R git:git /var/www/hexoblog/public/</code></li>
<li>注意，<code>/var/www/hexoblog/public</code> 要换成你自己的部署目录</li>
</ul>
</li>
</ul>
<h4 id="nginx服务器"><a href="#nginx服务器" class="headerlink" title="nginx服务器"></a>nginx服务器</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx/conf.d/</span><br><span class="line">vi blog.conf</span><br></pre></td></tr></table></figure>

<p><code>blog.conf</code>文件配置，开启缓存。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.onebug.tech;</span><br><span class="line">        charset utf-8;</span><br><span class="line"></span><br><span class="line">        root   /var/www/hexoblog/public;# 这里是静态文件地址</span><br><span class="line">        index  index.html;</span><br><span class="line">    location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ &#123;</span><br><span class="line"></span><br><span class="line">   		access_log off;</span><br><span class="line">    		expires 30d;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	location ~* ^.+\.(css|js|txt|xml|swf|wav)$ &#123;</span><br><span class="line">			access_log off;</span><br><span class="line">			expires 24h;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	location ~* ^.+\.(html|htm)$ &#123;</span><br><span class="line">	 		expires 1h;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编辑<code>nginx.conf</code>，开启gzip</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">gzip on;</span><br><span class="line"></span><br><span class="line">#设置允许压缩的页面最小字节数;</span><br><span class="line">gzip_min_length 1k;</span><br><span class="line"></span><br><span class="line">#设置压缩缓冲区大小，此处设置为4个16K内存作为压缩结果流缓存</span><br><span class="line">gzip_buffers 4 16k;</span><br><span class="line"></span><br><span class="line">#压缩版本</span><br><span class="line">gzip_http_version 1.1;</span><br><span class="line"></span><br><span class="line">#设置压缩比率，最小为1，处理速度快，传输速度慢；9为最大压缩比，处理速度慢，传输速度快;级别越高，压缩就越小</span><br><span class="line">gzip_comp_level 6;</span><br><span class="line"></span><br><span class="line">#制定压缩的类型</span><br><span class="line">gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/javascript application/json image/svg+xml application/x-font-ttf font/opentype image/x-icon;</span><br><span class="line"></span><br><span class="line">#配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）</span><br><span class="line">gzip_disable "MSIE [1-6]\.";</span><br><span class="line"></span><br><span class="line">#选择支持vary header；改选项可以让前端的缓存服务器缓存经过gzip压缩的页面; 这个可以不写</span><br><span class="line">gzip_vary on;</span><br></pre></td></tr></table></figure>
<h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><p>图床能够很大程度降低响应延迟，本站使用的是七牛云作为图床。可以参考该<a href="https://www.imczw.com/post/tech/hexo-on-oss-all.html" target="_blank" rel="noopener">文章</a>搭建。</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>测试</tag>
        <tag>博客</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记-基于Kali_Linux的渗透研究</title>
    <url>/2020/05/27/%E7%AC%94%E8%AE%B0-%E5%9F%BA%E4%BA%8EKali_Linux%E7%9A%84%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%A0%94%E7%A9%B6/</url>
    <content><![CDATA[<p>本文是阅读《基于Kali_Linux的渗透研究》之后写下的笔记。</p>
<a id="more"></a>

<h2 id="渗透信息收集"><a href="#渗透信息收集" class="headerlink" title="渗透信息收集"></a>渗透信息收集</h2><h3 id="主机探测与端口扫描"><a href="#主机探测与端口扫描" class="headerlink" title="主机探测与端口扫描"></a>主机探测与端口扫描</h3><h4 id="活跃主机扫描"><a href="#活跃主机扫描" class="headerlink" title="活跃主机扫描"></a>活跃主机扫描</h4><ul>
<li><p>ICMP Ping</p>
</li>
<li><p>Metasploit主机发现模块</p>
<p><code>modules/auxiliary/scanner/discovery</code>目录下的模块，主要有<code>arp_sweep</code>、<code>ipv6_multicast_ping</code>、<code>ipv6_nerghbor</code>、<code>udp_probe</code>、<code>udp_sweep</code>。<code>arp_sweep</code>使用ARP请求美剧本地局域网络中的所有活跃主机，<code>udp_sweep</code>通过发送UDP数据包探查指定主机是否活跃，并发现其主机上的UDP服务。</p>
</li>
<li><p>Nmap主机探测</p>
<p><code>nmap -sn  192.168.0.1/24</code> C段扫描，发现活跃主机</p>
</li>
</ul>
<h4 id="操作系统识别"><a href="#操作系统识别" class="headerlink" title="操作系统识别"></a>操作系统识别</h4><p><code>nmap -O  [靶机IP地址]</code>，如果识别的信息不够，可以加上<code>-sV</code>参数</p>
<h4 id="端口扫描与服务类型探测"><a href="#端口扫描与服务类型探测" class="headerlink" title="端口扫描与服务类型探测"></a>端口扫描与服务类型探测</h4><p>目前常见的端口扫描有：TCP  Connect 扫描、TCP  SYN 扫描 、TCP  ACK 扫描 、TCP  FIN扫描。</p>
<h5 id="Nmap扫描端口"><a href="#Nmap扫描端口" class="headerlink" title="Nmap扫描端口"></a>Nmap扫描端口</h5><p>常见的扫描类型参数有：</p>
<ul>
<li><code>-sT</code>  TCP  Connect 扫描</li>
<li><code>-sS</code> TCP SYN扫描</li>
<li><code>-sP</code> 通过发送ICMP Ping 请求探测主机是否存活，原理同Ping</li>
<li><code>-sA</code> TCP ACK 扫描</li>
</ul>
<p>常见的扫描选项有：</p>
<ul>
<li><code>-Pn</code>  在扫描之前，不发生ICMP  echo  测试目标是否活跃</li>
<li><code>-O</code>  启用TCP/IP协议栈的指纹特征来获取主机操作系统类型信息</li>
<li><code>-F</code> 快速扫描模式，只扫描默认端口</li>
</ul>
<h5 id="Python编程实现端口扫描"><a href="#Python编程实现端口扫描" class="headerlink" title="Python编程实现端口扫描"></a>Python编程实现端口扫描</h5><p>使用BSD套接字的接口进行编程</p>
<h5 id="Nmap探测服务"><a href="#Nmap探测服务" class="headerlink" title="Nmap探测服务"></a>Nmap探测服务</h5><p>端口扫描可以得到服务的简单信息，如果需要获取更加详细的服务版本信心，需要添加<code>-sV</code>选项。</p>
<h4 id="探测结果分析"><a href="#探测结果分析" class="headerlink" title="探测结果分析"></a>探测结果分析</h4><p>将探测到的信息汇总在表上，将端口和服务信息进行归类，并按照可能的攻击路线进行分类。</p>
<p><img src="http://image.onebug.tech/image-20200514161950520.png" alt="常见端口极其说明，以及攻击方向"></p>
<h3 id="网络服务扫描与查点"><a href="#网络服务扫描与查点" class="headerlink" title="网络服务扫描与查点"></a>网络服务扫描与查点</h3><p>对网络上特定服务进行扫描，可以增加渗透成功的概率。在确定开放端口后，通常会对相应端口上运行服务的信息进行更加升入的挖掘，这被称为服务查点。</p>
<h4 id="Telnet-服务扫描"><a href="#Telnet-服务扫描" class="headerlink" title="Telnet 服务扫描"></a>Telnet 服务扫描</h4><p>Telnet是一个历史悠久但缺乏安全性的网络服务，由于Telnet没有对传输过程中的数据进行加密，这使得使用Telnet的网络设备存在安全风险。可以使用Metasploit<code>中的辅助模块telnet_version</code>进行Telnet服务查点。</p>
<h4 id="SSH服务扫描"><a href="#SSH服务扫描" class="headerlink" title="SSH服务扫描"></a>SSH服务扫描</h4><p>与Telnet服务相比，SSH采用的是安全的加密信息传输方式。可以使用Metasploit中的<code>ssh_version</code>进行SSH服务查点。</p>
<h4 id="FPT服务查点"><a href="#FPT服务查点" class="headerlink" title="FPT服务查点"></a>FPT服务查点</h4><p>FPT（File Transfer Protocol）是用于在网络上进行文件传输的一套协议标准，使用的是客户/服务模式，属于网络传输协议的应用层。可以使用Metasploit中的<code>fpt_version</code>进行FPT服务查点。</p>
<h4 id="数据库服务查点"><a href="#数据库服务查点" class="headerlink" title="数据库服务查点"></a>数据库服务查点</h4><p>这是漏洞频发的“重灾区”，常见的有：SQL Server 的1433端口、Oracle SQL的1521端口、MySQL的3306端口、Postgre SQL的5453。可以使用Metasploit中不同的数据库查询模块进行服务查点：<code>msssql_ping</code>、<code>tnssnr_version</code>、<code>mysql_version</code>、<code>postgres_version</code>。</p>
<h3 id="网络漏洞扫描"><a href="#网络漏洞扫描" class="headerlink" title="网络漏洞扫描"></a>网络漏洞扫描</h3><p>常见的获取漏洞的方法是使用漏洞扫描工具，主要有<strong>Nessus</strong>和OpenVas，还可以直接到官方网站获取一些设备或系统的漏洞信息。</p>
<h2 id="Web渗透测试"><a href="#Web渗透测试" class="headerlink" title="Web渗透测试"></a>Web渗透测试</h2><h3 id="常见的Web攻击类型"><a href="#常见的Web攻击类型" class="headerlink" title="常见的Web攻击类型"></a>常见的Web攻击类型</h3><p><img src="http://image.onebug.tech/image-20200514175813811.png" alt="2017年Web应用的各类攻击次数占比"></p>
<h3 id="SQL注入攻击"><a href="#SQL注入攻击" class="headerlink" title="SQL注入攻击"></a>SQL注入攻击</h3><p>SQL注入漏洞产生需要满足两个条件：</p>
<ol>
<li>参数用户可控，即前端传给后端的参数内容是用户可以控制的</li>
<li>参数是带入数据库查询，即传入的参数拼接到SQL语句且带入数据库查询</li>
</ol>
<h4 id="SQL注入实例分析"><a href="#SQL注入实例分析" class="headerlink" title="SQL注入实例分析"></a>SQL注入实例分析</h4><ul>
<li><p>测试是否存在注入点，以及注入的类型</p>
<p><img src="http://image.onebug.tech/image-20200514182000220.png" alt="SQL注入测试数据"></p>
</li>
<li><p>获取数据库相关信息</p>
<p>首先使用<code>order by  num</code>判断数据库查询字段数，然后通过<code>union select 1,2,3...</code>联合查询语句判断出具体显示字段的显示位，确定显示位后，可以使用SQL注入常用的内置函数获取数据库的信息，最后获取数据库中表名和列名并导出数据库中的数据，验证数据的有效性可以到<a href="www.cmd5.com">www.cmd5.com</a>。</p>
</li>
</ul>
<h3 id="XSS跨站脚本攻击"><a href="#XSS跨站脚本攻击" class="headerlink" title="XSS跨站脚本攻击"></a>XSS跨站脚本攻击</h3><p>跨站脚本攻击允许用户将恶意代码注入到网页中，其他使用者在浏览网页时会受到影响/根据XSS脚本注入方式的不同，XSS攻击一般可以分为三种：反射型XSS、存储型XSS、DOM型XSS。</p>
<ul>
<li>反射性XSS又称非持久性XSS，此攻击类型具有一次性，其攻击方式为：攻击者通过电子邮件等方式将包含XSS代码的恶意链接发送给目标用户。</li>
<li>存储型XSS又称为持久型XSS，攻击脚本将被永久放在服务器的数据库或文件中。这种攻击多见于论坛、博客和留言板。</li>
<li>DOM型XSS是一种特殊的反射型XSS,它是基于DOM文档对象模型的一种漏洞。DOM型XSS攻击方式为：用户请求一个专门被设计的URL，它由攻击者提交且其中包含XSS代码，而服务器的响应不会以任何形式包含攻击者的脚本，当用户的浏览器处理这个响应时，DOM对象就会处理XSS代码。</li>
</ul>
<h3 id="文件上传攻击"><a href="#文件上传攻击" class="headerlink" title="文件上传攻击"></a>文件上传攻击</h3><p>上传webshell工具：BurpSuit</p>
<h2 id="终端主机渗测试"><a href="#终端主机渗测试" class="headerlink" title="终端主机渗测试"></a>终端主机渗测试</h2><h3 id="网络服务渗透"><a href="#网络服务渗透" class="headerlink" title="网络服务渗透"></a>网络服务渗透</h3><p>网络服务渗透攻击指的是以远程主机所运行的网络服务为目标，向目标服务开放端口发送内嵌而已内容并符合该网络协议的数据包，利用网络服务程序内部的安全漏洞，劫持目标程序控制流，实施远程执行代码的行为，最终达到控制目标系统的目的。</p>
<p>在利用漏洞进行渗透测试时，需要注意：</p>
<ul>
<li>网络环境需要满足需求，测试主机和目标主机至少能够互相ping通</li>
<li>高危漏洞要明确，需要通过漏洞扫描工具识别</li>
<li>有可能会由于网络环境不稳定导致入侵失败，需要多次尝试</li>
</ul>
<h3 id="Windows-Server-2003"><a href="#Windows-Server-2003" class="headerlink" title="Windows Server 2003"></a>Windows Server 2003</h3><ul>
<li>Windows远程桌面漏洞：MS12-020</li>
<li>SMB网络服务漏洞：MS17-010</li>
</ul>
<h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul>
<li>Samba服务渗透攻击</li>
<li>Tomcat 服务渗透攻击</li>
<li>Telnet远程服务渗透攻击</li>
</ul>
<h3 id="Windows-7"><a href="#Windows-7" class="headerlink" title="Windows 7"></a>Windows 7</h3><ul>
<li>SMB服务漏洞：MS17-010</li>
<li>DNS解析漏洞：MS11-030</li>
</ul>
]]></content>
      <categories>
        <category>web渗透</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>web渗透</tag>
        <tag>安全</tag>
      </tags>
  </entry>
  <entry>
    <title>顶级域名注册</title>
    <url>/2020/06/24/freenom/</url>
    <content><![CDATA[<p>众所周知，<a href="https://freenom.com/" target="_blank" rel="noopener">Freenom</a>是地球上唯一一个提供免费顶级域名的商家，不过需要每年续期，每次续期最多一年，而管理界面并不是很人性化。下面介绍如何注册一个免费的顶级域名，使用github action 自动续费，以及托管于cloudflare。</p>
<a id="more"></a>

<h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>注册教程参见<a href="https://zhuanlan.zhihu.com/p/109553641" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/109553641</a>，需要注意的是：</p>
<ul>
<li>注册过程中你的ip地址要全程保持不变</li>
<li>个人信息可以瞎填，但是<strong>国家</strong>信息尽量与你的ip地址相对应</li>
<li>账号注册成功后，如果在申请顶级域名的过程中出现问题的话，多刷新几次，或者等一天再回来申请，还不成功可以尝试给freenom发封邮件，附上自己的<strong>customer id</strong>（我几乎没遇到问题就是了）</li>
</ul>
<h3 id="使用cloudflare管理域名"><a href="#使用cloudflare管理域名" class="headerlink" title="使用cloudflare管理域名"></a>使用<a href="https://www.cloudflare.com/" target="_blank" rel="noopener">cloudflare</a>管理域名</h3><p>直接按照cloudflare的提示进行操作，非常简单，无非就是修改DNS服务器地址。添加域名的时候，如果出现<code>XXX is not a registered domain</code>的错误，要先在freenom管理页面随便添加一条解析记录，然后才能在cloudflare处继续操作。freenom更改DNS服务器一般需要一天时间，这段时间cloudflare上的域名状态会一直显示<code>Pending Nameserver Update</code>，你只需要等待就行。</p>
<p>如果你只需要域名解析服务，注意添加域名解析时不要点亮小云朵，使用<strong>dns only</strong>就可以了。</p>
<p><img src="http://image.onebug.tech/image-20200624103558605.png-d" alt="image-20200624103558605"></p>
<h3 id="使用github-action自动续期"><a href="#使用github-action自动续期" class="headerlink" title="使用github action自动续期"></a>使用<a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noopener">github action</a>自动续期</h3><ul>
<li><p>fork项目<a href="https://github.com/luolongfei/freenom" target="_blank" rel="noopener">https://github.com/luolongfei/freenom</a> </p>
</li>
<li><p>查看<a href="https://github.com/lsqls/freenom#--%E6%9C%AC%E9%A1%B9%E7%9B%AE%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95" target="_blank" rel="noopener">项目使用方法</a></p>
</li>
<li><p>设置<strong>Secrets</strong></p>
</li>
<li><p>启用github action</p>
</li>
</ul>
<p>附上一张我的<strong>Secrets</strong>截图 ，我是直接把邮件通知关了<code>MAIL_EBABLE=false</code>（如果你需要这个功能，请自行设置）</p>
<p><img src="http://image.onebug.tech/image-20200624104312825.png-d" alt="image-20200624104312825"></p>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>免费的就是最贵的，而且还不能保证稳定。域名这玩意并不贵，我的建议是嫌麻烦直接去<a href="https://sg.godaddy.com/zh" target="_blank" rel="noopener">godday</a>购买一个首年域名，价格不会超过10RMB。</p>
]]></content>
      <categories>
        <category>网站</category>
      </categories>
      <tags>
        <tag>域名</tag>
        <tag>cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>腾讯云(DNSPOD)域名DDNS脚本使用</title>
    <url>/2020/06/24/%E8%85%BE%E8%AE%AF%E4%BA%91(DNSPOD)%E5%9F%9F%E5%90%8DDDNS%E8%84%9A%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>DDNS（Dynamic Domain Name Server，动态域名服务）是将用户的动态IP地址映射到一个固定的域名解析服务上，用户每次连接网络的时候客户端程序就会通过信息传递把该主机的动态IP地址传送给位于服务商主机上的服务器程序，服务器程序负责提供DNS服务并实现动态域名解析。下面是介绍如何使用脚本实现腾讯云购买域名的DDNS。</p>
<a id="more"></a>

<h2 id="登录DNSPod获取密钥"><a href="#登录DNSPod获取密钥" class="headerlink" title="登录DNSPod获取密钥"></a>登录DNSPod获取密钥</h2><p>访问DNSPod控制台<a href="https://console.dnspod.cn/" target="_blank" rel="noopener">https://console.dnspod.cn/</a>，使用你的腾讯云账号登录，如果腾讯云账号绑定微信，直接扫码登录就行。在域名管理添加一条A记录。域名前缀需要设定好，IP可以随意填写。我将域名前缀设置为<code>test</code>，ip设置为<code>1.1.1.1</code>。</p>
<p><img src="http://image.onebug.tech/image-20200624223938388.png-d" alt="image-20200624223938388"></p>
<p>点击个人头像下的密钥管理，创建一个密钥，将<code>ID</code>和<code>token</code>记下。</p>
<p><img src="http://image.onebug.tech/image-20200624224951160.png-d" alt="image-20200624224951160"></p>
<h2 id="设置DDNS脚本"><a href="#设置DDNS脚本" class="headerlink" title="设置DDNS脚本"></a>设置DDNS脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/imki911/ArDNSPod</span><br><span class="line"><span class="built_in">cd</span> ArDNSPod</span><br><span class="line">vi dns.conf</span><br></pre></td></tr></table></figure>

<p><code>dns.conf</code>设置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. Combine your token ID and token together as follows</span></span><br><span class="line"><span class="comment"># 第一个参数是上图的ID，第二个参数是上图的Token</span></span><br><span class="line">arToken=<span class="string">"123425,b28c3344eaeaea9074c123451234512d"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. Place each domain you want to check as follows</span></span><br><span class="line"><span class="comment"># you can have multiple arDdnsCheck blocks</span></span><br><span class="line"><span class="comment"># 第一个参数是你的域名，第二个参数是前面设定的域名前缀</span></span><br><span class="line">arDdnsCheck <span class="string">"yourdomain.com"</span> <span class="string">"test"</span></span><br></pre></td></tr></table></figure>

<h2 id="定时运行DDNS脚本"><a href="#定时运行DDNS脚本" class="headerlink" title="定时运行DDNS脚本"></a>定时运行DDNS脚本</h2><p>测试脚本是否能正常运行，<code>./ddnspod.sh</code>，显示以下信息说明脚本正常运行，到DNSPod控制台可以看到前面设置的A记录的IP已经被修改为外网IP。</p>
<p><img src="http://image.onebug.tech/image-20200624225712024.png-d" alt="image-20200624225712024"></p>
<p>利用cron半小时执行一次DDNS脚本，注意脚本要使用绝对路径。群晖可以使用自带的定时程序完成该操作。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">*/30 * * * *  /home/bzjz/ArDNSPod/ddnspod.sh</span><br></pre></td></tr></table></figure>

<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>将不支持DDNS的域名服务商下的域名接入DNSPod，同样可以实现DDNS。</p>
<p><img src="http://image.onebug.tech/image-20200624232552344.png-d" alt="image-20200624232552344"></p>
]]></content>
      <categories>
        <category>网站</category>
      </categories>
      <tags>
        <tag>域名</tag>
        <tag>ddns</tag>
        <tag>脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux备忘录</title>
    <url>/2020/06/27/linux%E5%A4%87%E5%BF%98%E5%BD%95/</url>
    <content><![CDATA[<p>Linux备忘录，记录经常忘记的一些命令以及概念。</p>
<a id="more"></a>

<ul>
<li><code>Ctrl + D</code>  结束键盘输入</li>
<li><code>man</code>常用的数字代表的指令类型<ul>
<li><strong>1</strong>用户再shell环境中可以操作的指令和可执行文件</li>
<li><strong>5</strong>配置文件</li>
<li><strong>8</strong>系统管理员可以使用的管理指令</li>
</ul>
</li>
<li><code>info</code> 与<code>man</code>类似，但是<code>info</code>将文档分成一个个页面，每个页面可以跳转</li>
<li><code>/usr/share/doc</code> 存放着软件的一整套说明文件</li>
<li><code>sync</code>将内存中的文件数据立即同步到磁盘</li>
<li>磁盘<ul>
<li>IDE 133MB/s</li>
<li>SATA SATA-II  300MB/s，SATA-III 600MB/s</li>
<li>SCSI  </li>
<li>SAS  6Gb/s</li>
</ul>
</li>
<li>磁盘的文件名，文件名后面序号的确定与系统检测到磁盘的顺序有关，而与磁盘所插入的插槽位置无关<ul>
<li>IDE磁盘：/dev/hd[a-d]</li>
<li>SATA/SCSI/SAS  ：/dev/sd[a-p]</li>
</ul>
</li>
<li>MBR<ul>
<li>主要开机记录占446bytes，分区表占64bytes</li>
<li>分区表最多存储四个分区分为主分区和扩展分区，扩展分区只有一个</li>
<li>扩展分区使用其它扇区来记录额外的分区表，从而分出更多逻辑分区</li>
<li>Linux分区当成文件，分区文件的命名方式为：磁盘文件名+编号，例如/dev/sda1。逻辑分区的编号从5开始</li>
</ul>
</li>
<li>GPT<ul>
<li>GPT为了兼容所有磁盘，在定义扇区上使用逻辑区块地址（Logic Block Address，LBA），LBA扇区大小通常为512bytes</li>
<li>GPT第一个区块记录MBR，紧接着33个区块记录分区信息，最后的33个区块用于对分区信息进行备份，33个区块的第一个区块为GPT表头记录，这个部分记录了分区表本身位置与大小和备份分区的位，同时放置了分区表的校验码（CRC32）。</li>
<li>GPT没有扩展分区的概念，都是主分区，每个LBA可以分为4个分区，因此总共可以分128个分区。</li>
<li>MBR不支持2.2TN以上的硬盘，GPT则最多支持到8ZB</li>
</ul>
</li>
<li>BIOS不可以读取GPT分区表，UEFI可以读取</li>
<li>对分区进行格式化就是在分区上建立文件系统，一个分区通常只能格式化一个文件系统，但是磁盘阵列等技术可以将一个分区格式化称为多个文件系统</li>
<li>文件系统<ul>
<li>inode ，一个文件占用一个inode，记录文件的属性和文件内容所在的block编号</li>
<li>block：记录文件的具体内容</li>
<li>superblock：记录文件系统的整体信息，包括inode和block的总量、使用量、剩余量，文件系统的格式和相关信息</li>
<li>block bitmap：记录block是否被使用的位图</li>
</ul>
</li>
<li>在Ext2文件系统中所支持的block大小有1K，2K，以及4K三种</li>
<li>inode组成：权限、拥有者与群组、容量、ctime、mtime、定义文件特性的旗标（flag，如SetUID）、文件真正内容的指向</li>
<li>每个inode的大小是固定的。为了引用大量的block编号，除了使用直接指向外引入了间接、双间接、三间接引用，这决定了文件系统的最大的单文件大小</li>
<li>建立目录，系统分配一个inode和至少一个block，block中记录的是该目录下的文件名和inode的对应关系</li>
<li>文件的inode本身不记录文件名，文件名记录在目录中，因此新增文件、删除文件、更改文件名这些与文件名有关的操作都与目录的写权限相关</li>
<li>ext3/ext4文件系统引入了日志功能，可以利用日志解决block bitmap与block数据不一致的问题</li>
<li>linux 最基础的三个目录：<ul>
<li><code>/root</code> 根目录</li>
<li><code>/usr</code> （unix software resource）软件默认安装目录</li>
<li><code>/var</code>  （varible）存放系统或程序运行中的数据文件</li>
</ul>
</li>
<li><code>mtime</code>：文件内容被修改会更新；<code>ctime</code>：文件的状态改变会更新；<code>atime</code>：读文件时会更新</li>
<li><code>mkdir -p</code> 递归创建目录</li>
<li><code>umask</code>通过掩码表示设置默认权限，文件默认权限为666，目录默认权限为777。<code>umask 0077</code>，之后创建的目录默认权限为700，文件默认权限是600。</li>
<li><code>ln</code>实体链接在目录下创建一个条目，记录文件名与inode编号，不能跨越文件系统、不能对目录进行链接</li>
<li><code>ln -s</code>符号链接保存着源文件所在的绝对路径，可以理解为Windows的快捷方式</li>
<li><code>head</code>：获取文件前几行；<code>tail</code> 获取文件后几行</li>
<li><code>whereis</code>：搜寻相关的的可执行文件、源代码文件、帮助文件</li>
<li><code>locate</code>利用数据库进行搜索，使用<code>updatedb</code>来立即更新数据库</li>
<li><code>find[basedir] [option]</code><ul>
<li><code>-mtime n</code> 列出在n天前的那一天修改过内容的文件</li>
<li><code>-mtime +n</code>列出在n天之前修改过内容的文件</li>
<li><code>-mtime -n</code> 列出在n天之内修改过内容的文件</li>
<li><code>-user name</code>；<code>-group name</code>；<code>-nouser</code>；<code>-nogroup</code></li>
<li><code>-name filename</code></li>
</ul>
</li>
<li><code>gzip</code>、<code>bzip2</code>、<code>xz</code>的压缩比不断优化，不过要注意的是，压缩比越高，压缩的世家就越长</li>
<li><code>tar</code><ul>
<li>打包压缩 <code>tar -zvcf filename.tar.gz</code></li>
<li>查看      <code>tar -ztvf  filename.tar.gz</code></li>
<li>解压缩   <code>tar -zvxf   filename.tar.gz</code></li>
</ul>
</li>
<li>对一个变量赋值直接使用<code>=</code></li>
<li>对变量的使用需要早变量前加上<code>$</code>，也可以用<code>${}</code>的形式</li>
<li>变量内容中如果有空格，必须使用双引号或者单引号，双引号中的特殊字符可以保留原本特性，单引号内的特殊字符就是特殊字符本身</li>
<li>可以使用`指令`或者${指令}的方式将指令的执行结果赋值给变量</li>
<li>可以使用<code>export</code>命令将自定义变量转为环境变量，环境变量可以在子程序也就是当前bash产生的子bash中使用</li>
<li>指令搜索顺序<ul>
<li>绝对或相对路径</li>
<li>别名</li>
<li>Bash内置指令</li>
<li>$PATH指定的路径搜索找到的第一个指令</li>
</ul>
</li>
<li>数据量重定向<ul>
<li>标准输入 0  <code>&lt;</code>或<code>&lt;&lt;</code></li>
<li>标准输出 1 <code>&gt;</code>或<code>&gt;&gt;</code></li>
<li>标准错误输出 2 <code>2&gt;</code> 或<code>2&gt;&gt;</code></li>
</ul>
</li>
<li><code>2&gt;&amp;1</code>表示将标准错误输出转换为标准输出： <code>find /home -name .bashrrc &gt; list 2&gt;&amp;1</code></li>
<li><code>cut</code>对数据进行切分，取出想要的部分，切分过程一行一行地进行。取出登入者的用户名：<code>last | cut -d &#39; &#39; -f 1</code></li>
<li>以<code>/etc/passwd</code>的第三列进行排序：<code>cat /etc/passwd | sort -t &#39;:&#39;  -k 3</code></li>
<li>取得每个人的登录总次数：<code>last|cut -d  &#39; &#39; -f 1 |sort| uniq -c</code> </li>
<li><code>awk</code>每次只处理一行，处理的最小单位是字段，每个字段的命令方式为<code>$n</code>，n从1开始，<code>$0</code>表示一整行，具体：<code>awk &#39;条件类型 {动作1} 条件类型 {动作2} ...&#39; filename</code></li>
<li><code>awk</code>变量：<code>NF</code>（每一行拥有的字段数）；<code>NR</code>（目前所处理的是第几行数据）；<code>FS</code>（目前的分隔字符，默认是空格）  </li>
<li><code>awk</code>示例：<code>/etc/passwd</code>文件的第三个字段为UID，对UID小于10的数据进行处理：<code>cat /etc/passwd|awk &#39;BEGIN {FS=&quot;:&quot;} $3&lt;10 {print $1 &quot;\t&quot; $3}&#39;</code></li>
<li><code>pstree -A</code>查看进程树</li>
<li>查看特定端口的进程：<code>netstat -anp|grep port</code></li>
<li>一个父进程退出，它的一个或者多个进程还在运行，这些子进程将称为孤儿进程，孤儿进程将会被init进程收养</li>
<li>如果子进程退出，父进程并没有调用<code>wait()</code>或者<code>waitpid()</code>，那么子进程的进程描述符仍然保存在系统中，这种进程被称之为僵尸进程，僵尸进程有可能对系统造成危害，消灭僵尸进程只需要将其父进程杀死即可。</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>备忘录</tag>
      </tags>
  </entry>
  <entry>
    <title>github action 部署爬虫脚本</title>
    <url>/2020/06/28/github%20action%20%E9%83%A8%E7%BD%B2%E7%88%AC%E8%99%AB%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>很久之前写了一个爬虫脚本，每10分钟获取一次比特币价格，当价格波动较大时，使用邮件通知我进行交易。之前的脚本部署在学校的群晖上，由于会时不时地停电，爬虫脚本运行状态很不稳定，这段时间接触了github action ，感觉正好满足我的需求，于是将爬虫迁移到到GitHub Action上，并弃用原来Python实现的邮件发送功能，改为利用Github Action实现邮件通知。</p>
<p>项目地址：<a href="https://github.com/lsqls/bitcoin" target="_blank" rel="noopener">https://github.com/lsqls/bitcoin</a></p>
<a id="more"></a>

<h2 id="编写爬虫脚本"><a href="#编写爬虫脚本" class="headerlink" title="编写爬虫脚本"></a>编写爬虫脚本</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://price.btcfans.com/</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> jinja2 <span class="keyword">import</span> Environment, PackageLoader</span><br><span class="line">max=<span class="number">10000</span>;min=<span class="number">4000</span></span><br><span class="line"><span class="comment">#获取环境变量中的MAX，MIN值</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">'MAX'</span> <span class="keyword">in</span> os.environ:</span><br><span class="line">    max=float(os.getenv(<span class="string">'MAX'</span>)) </span><br><span class="line"><span class="keyword">if</span> <span class="string">'MIN'</span> <span class="keyword">in</span> os.environ:</span><br><span class="line">    min=float(os.getenv(<span class="string">'MIN'</span>))</span><br><span class="line">sendemail=<span class="literal">False</span>;strategy=<span class="string">"继续持有"</span></span><br><span class="line"><span class="comment">#获取https://price.btcfans.com/上显示的比特币价格</span></span><br><span class="line">url=<span class="string">'https://price.btcfans.com/'</span></span><br><span class="line">html = etree.HTML(requests.get(url).text)</span><br><span class="line">price = float(html.xpath(<span class="string">'//li[@id="coin-bitcoin"]//span[@class="last-price"]/text()'</span>)[<span class="number">0</span>].replace(<span class="string">','</span>,<span class="string">''</span>))</span><br><span class="line"><span class="comment">#根据当前价格选择策略，以及是否发送邮件</span></span><br><span class="line"><span class="keyword">if</span> (price&gt;max):</span><br><span class="line">    sendemail=<span class="literal">True</span></span><br><span class="line">    strategy=<span class="string">"卖出"</span></span><br><span class="line"><span class="keyword">if</span> (price&lt;min):</span><br><span class="line">    sendemail=<span class="literal">True</span></span><br><span class="line">    strategy=<span class="string">"买入"</span></span><br><span class="line"><span class="comment">#使用jinja2渲染HTML用于发送邮件</span></span><br><span class="line">env = Environment(loader=PackageLoader(<span class="string">'bitcoin'</span>, <span class="string">''</span>))</span><br><span class="line">template = env.get_template(<span class="string">'template.html'</span>)</span><br><span class="line">template.stream(price=price,max=max,min=min,strategy=strategy).dump(<span class="string">'email.html'</span>)</span><br><span class="line"><span class="comment">#放弃使用Python脚本发送邮件的方案，使用dawidd6/action-send-mail发送邮件，两者通过环境变量通信</span></span><br><span class="line">print(<span class="string">"::set-env name=sendemail::&#123;&#125;"</span>.format(sendemail))</span><br></pre></td></tr></table></figure>

<p>脚本非常简单，可以分为以下几步：</p>
<ul>
<li><p>读取环境变量中的MAX、MIN值。如果不存在，就使用默认值</p>
</li>
<li><p>获取网络上的比特币价格</p>
</li>
<li><p>根据当前比特币价格选择策略</p>
</li>
<li><p>渲染HTML文件用于发送邮件</p>
</li>
<li><p>设置环境变量，邮件发送需要根据这个变量选择是否执行</p>
<p><img src="http://image.onebug.tech/image-20200628205301788.png-d" alt="image-20200628205301788"></p>
<center> 输出HTML的部分截图</center>

</li>
</ul>
<h2 id="编写workflow文件"><a href="#编写workflow文件" class="headerlink" title="编写workflow文件"></a>编写workflow文件</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">'bitcoin'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">'*/10 *  * * *'</span> </span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">GetBtcPrice:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'Checkout codes'</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'Setup python'</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-python@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">python-version:</span> <span class="string">'3.x'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'Install dependencies'</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">python</span> <span class="string">-m</span> <span class="string">pip</span> <span class="string">install</span> <span class="string">--upgrade</span> <span class="string">requests</span> <span class="string">lxml</span> <span class="string">jinja2</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'run get price script'</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="attr">MAX:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.MAX</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">MIN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.MIN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">python</span> <span class="string">bitcoin.py</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Send</span> <span class="string">mail</span></span><br><span class="line">      <span class="attr">if:</span> <span class="string">$&#123;&#123;</span> <span class="string">env.sendemail</span> <span class="string">==</span> <span class="string">'True'</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">dawidd6/action-send-mail@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">server_address:</span> <span class="string">smtp.163.com</span></span><br><span class="line">        <span class="attr">server_port:</span> <span class="number">465</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">$&#123;&#123;secrets.MAIL_USERNAME&#125;&#125;</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">$&#123;&#123;secrets.MAIL_PASSWORD&#125;&#125;</span></span><br><span class="line">        <span class="attr">subject:</span> <span class="string">比特币价格监控</span></span><br><span class="line">        <span class="comment"># Literal body:</span></span><br><span class="line">        <span class="attr">body:</span> <span class="string">file://email.html</span></span><br><span class="line">        <span class="attr">to:</span> <span class="string">$&#123;&#123;secrets.TO&#125;&#125;</span></span><br><span class="line">        <span class="attr">from:</span> <span class="string">$&#123;&#123;secrets.MAIL_USERNAME&#125;&#125;</span> <span class="comment"># &lt;user@example.com&gt;</span></span><br><span class="line">        <span class="comment"># Optional content type (defaults to text/plain):</span></span><br><span class="line">        <span class="attr">content_type:</span> <span class="string">text/html</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>脚本每10分钟执行一次，cron的设置语法和Linux下的crontab一致</p>
</li>
<li><p>在secrets中设置<code>MAX</code>、<code>MIN</code>、<code>MAIL_USERNAME</code>、<code>MAIL_PASSWORD</code>、<code>TO</code>（接收邮箱地址）以保证脚本的正常运行</p>
</li>
<li><p>Fork 的仓库上 GitHub Actions 的定时任务不会自动执行，必须要手动触发一次后才能正常工作，随便改点什么提交就行</p>
<p><img src="http://image.onebug.tech/image-20200628205024464.png-d" alt="image-20200628205024464"></p>
</li>
</ul>
<h2 id="参考文章与项目"><a href="#参考文章与项目" class="headerlink" title="参考文章与项目"></a>参考文章与项目</h2><blockquote>
<p><a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html</a></p>
<p><a href="http://www.ruanyifeng.com/blog/2019/12/github_actions.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2019/12/github_actions.html</a></p>
<p><a href="https://github.com/Closty/chaoxing/" target="_blank" rel="noopener">https://github.com/Closty/chaoxing/</a></p>
<p><a href="https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idif" target="_blank" rel="noopener">https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idif</a></p>
</blockquote>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
        <tag>github action</tag>
      </tags>
  </entry>
</search>
